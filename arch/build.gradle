
plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
}

android {
    compileSdk 32

    defaultConfig {
        minSdk 28
        targetSdk 32

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion compose_version
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {
    def koin_version='3.2.0'

    // Koin main features for Android
    api "io.insert-koin:koin-android:$koin_version"
// No more koin-android-viewmodel, koin-android-scope, koin-android-fragment

// Java Compatibility
    api "io.insert-koin:koin-android-compat:$koin_version"
// Jetpack WorkManager
    api "io.insert-koin:koin-androidx-workmanager:$koin_version"
// Navigation Graph
    api "io.insert-koin:koin-androidx-navigation:$koin_version"
// Jetpack Compose
    api "io.insert-koin:koin-androidx-compose:$koin_version"

    api 'com.github.liangjingkanji:Net:3.4.14'
    api 'com.github.liangjingkanji:Serialize:1.3.1'
    api 'com.squareup.okhttp3:okhttp:4.10.0'
    api 'androidx.core:core-ktx:1.8.0'
    api "androidx.compose.ui:ui:$compose_version"
    api "androidx.compose.material3:material3:1.0.0-alpha01"
    api "androidx.compose.ui:ui-tooling-preview:$compose_version"
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"
    debugImplementation "androidx.compose.ui:ui-tooling:$compose_version"
    debugImplementation "androidx.compose.ui:ui-test-manifest:$compose_version"
    api 'androidx.lifecycle:lifecycle-runtime-ktx:2.5.0'
    api 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.5.0'
    api 'androidx.activity:activity-compose:1.3.1'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    api 'com.squareup.retrofit2:retrofit:2.9.0'
    api 'com.google.code.gson:gson:2.9.0'
    api 'com.squareup.retrofit2:converter-gson:2.9.0'

    def room_version = "2.4.3"

    api "androidx.room:room-runtime:$room_version"
    annotationProcessor "androidx.room:room-compiler:$room_version"
}

apply plugin: 'maven-publish'

afterEvaluate {
    publishing {
        repositories {
            maven {
                def releasesRepoUrl = 'https://packages.aliyun.com/maven/repository/2258953-release-Ln6KGF/'
                def snapshotsRepoUrl = 'https://packages.aliyun.com/maven/repository/2258953-snapshot-xyrk2X/'
                url = releasesRepoUrl
//                url = snapshotsRepoUrl
                credentials{
                        username '62e1fe6018a4006f4acbb145'
                        password '86LicryJ]Fq_'
                }
            }
        }
        publications {
            // Creates a Maven publication called "release".

            release(MavenPublication) {
                // Applies the component for the release build variant.
                from components.release

                // You can then customize attributes of the publication as shown below.
                groupId = 'com.koader.arch'
                artifactId = 'arch'
                version = '1.2'
            }
            // Creates a Maven publication called “debug”.
//            debug(MavenPublication) {
//                // Applies the component for the debug build variant.
//                from components.debug
//
//                groupId = 'com.koader.arch'
//                artifactId = 'arch'
//                version = '1.0'
//            }
        }
    }
}
